#include<iostream>
#include<stdlib.h>
#include<cstring>
#define maxn 999999
using namespace std;

int path[31][31];
int shortest[31][31];


int path1[31][31];
int shorttime[31][31];

struct node
{
    char name[20];
    int num;

}n[100];
int dis[31][31]={
maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn,
maxn,maxn, 191, 617, 1084, 1450, 1319, 1474, 828, 708, 1912, 1214, 455, 1295, 1831, 777, 1111, 641, 1345, 1292, 1377, 186, 1941, 354, 452, 303, 442, 1732, 1371, 866, 1868,
maxn,191,maxn, 245, 197, 276, 521, 888, 219, 262, 617, 1249, 985, 1044, 1853, 561, 872, 1683, 1623, 1214, 891, 661, 1403, 1618, 497, 794, 412, 507, 387, 409, 1673,
maxn,617, 245, maxn, 891, 679, 928, 1666, 1385, 740, 192, 438, 1456, 190, 1892, 1414, 1198, 596, 555, 1640, 1479, 1120, 1100, 756, 651, 1143, 1898, 1779, 173, 834, 304,
maxn,1084, 197, 891,maxn, 906, 1190, 1516, 326, 1481, 1258, 894, 189, 1376, 673, 287, 1888, 1868, 432, 1479, 491, 1383, 665, 1189, 1008, 1254, 1080, 1527, 656, 1223, 936,
maxn,1450, 276, 679, 906,maxn, 1571, 1895, 1874, 1222, 1020, 579, 1727, 1323, 1647, 462, 736, 840, 311, 786, 905, 1517, 405, 1324, 581, 1402, 500, 1300, 891, 274, 1516,
maxn,1319, 521, 928, 1190, 1571, maxn, 1780, 657, 1541, 157, 687, 1207, 1637, 903, 1533, 695, 1859, 1759, 908, 971, 738, 1172, 1696, 656, 580, 363, 518, 1050, 341, 912,
maxn,1474, 888, 1666, 1516, 1895, 1780, maxn, 1805, 1360, 1109, 774, 887, 1898, 1233, 745, 591, 152, 1100, 1441, 386, 524, 370, 1146, 771, 498, 1749, 1818, 1234, 1231, 1284,
maxn,828, 219, 1385, 326, 1874, 657, 1805, maxn, 203, 349, 1368, 1088, 1650, 338, 277, 617, 278, 643, 1398, 1033, 1757, 771, 1860, 1367, 1363, 664, 1859, 566, 1085, 1401,
maxn,708, 262, 740, 1481, 1222, 1541, 1360, 203, maxn, 950, 1799, 469, 1106, 1348, 1653, 974, 358, 594, 359, 739, 452, 1545, 835, 1443, 1893, 1873, 1737, 664, 653, 398,
maxn,1912, 617, 192, 1258, 1020, 157, 1109, 349, 950, maxn, 150, 1008, 1368, 930, 1946, 548, 1031, 1739, 1148, 1159, 307, 822, 372, 688, 1642, 788, 929, 340, 1007, 908,
maxn,1214, 1249, 438, 894, 579, 687, 774, 1368, 1799, 150, maxn, 941, 165, 1438, 1306, 861, 152, 984, 1022, 405, 678, 1196, 1312, 1436, 1025, 1583, 1219, 492, 594, 1566,
maxn,455, 985, 1456, 189, 1727, 1207, 887, 1088, 469, 1008, 941, maxn, 431, 1548, 1472, 801, 1171, 449, 1907, 1626, 1042, 1139, 1625, 1862, 950, 860, 1353, 1819, 1811, 438,
maxn,1295, 1044, 190, 1376, 1323, 1637, 1898, 1650, 1106, 1368, 165, 431, maxn, 951, 939, 1005, 373, 1552, 1735, 932, 1435, 238, 976, 1767, 507, 982, 482, 719, 504, 671,
maxn,1831, 1853, 1892, 673, 1647, 903, 1233, 338, 1348, 930, 1438, 1548, 951, maxn, 1139, 326, 879, 718, 1842, 1775, 1705, 1784, 499, 391, 662, 1495, 210, 268, 303, 1889,
maxn,777, 561, 1414, 287, 462, 1533, 745, 277, 1653, 1946, 1306, 1472, 939, 1139, maxn, 1773, 229, 946, 637, 1879, 1099, 1387, 216, 499, 343, 1745, 1647, 766, 1436, 1855,
maxn,1111, 872, 1198, 1888, 736, 695, 591, 617, 974, 548, 861, 801, 1005, 326, 1773, maxn, 1238, 232, 1805, 684, 264, 1051, 866, 1021, 536, 1613, 863, 1105, 735, 403,
maxn,641, 1683, 596, 1868, 840, 1859, 152, 278, 358, 1031, 152, 1171, 373, 879, 229, 1238, maxn, 1062, 158, 182, 1295, 863, 906, 1471, 1708, 396, 1132, 631, 694, 1746,
maxn,1345, 1623, 555, 432, 311, 1759, 1100, 643, 594, 1739, 984, 449, 1552, 718, 946, 232, 1062, maxn, 572, 1879, 511, 285, 800, 523, 1616, 1394, 209, 1242, 1389, 1203,
maxn,1292, 1214, 1640, 1479, 786, 908, 1441, 1398, 359, 1148, 1022, 1907, 1735, 1842, 637, 1805, 158, 572, maxn, 374, 1104, 860, 1295, 999, 736, 1263, 1024, 1172, 518, 1568,
maxn,1377, 891, 1479, 491, 905, 971, 386, 1033, 739, 1159, 405, 1626, 932, 1775, 1879, 684, 182, 1879, 374, maxn, 937, 1055, 1908, 341, 1352, 175, 1427, 964, 464, 774,
maxn,186, 661, 1120, 1383, 1517, 738, 524, 1757, 452, 307, 678, 1042, 1435, 1705, 1099, 264, 1295, 511, 1104, 937, maxn, 684, 824, 1122, 509, 1183, 1220, 437, 1447, 468,
maxn,1941, 1403, 1100, 665, 405, 1172, 370, 771, 1545, 822, 1196, 1139, 238, 1784, 1387, 1051, 863, 285, 860, 1055, 684, maxn, 1127, 1723, 1820, 1913, 1018, 1142, 1535, 1452,
maxn,354, 1618, 756, 1189, 1324, 1696, 1146, 1860, 835, 372, 1312, 1625, 976, 499, 216, 866, 906, 800, 1295, 1908, 824, 1127, maxn, 1430, 563, 577, 1352, 649, 1877, 975,
maxn,452, 497, 651, 1008, 581, 656, 771, 1367, 1443, 688, 1436, 1862, 1767, 391, 499, 1021, 1471, 523, 999, 341, 1122, 1723, 1430, maxn, 1693, 274, 373, 1322, 611, 1731,
maxn,303, 794, 1143, 1254, 1402, 580, 498, 1363, 1893, 1642, 1025, 950, 507, 662, 343, 536, 1708, 1616, 736, 1352, 509, 1820, 563, 1693, maxn, 553, 582, 1455, 743, 1275,
maxn,442, 412, 1898, 1080, 500, 363, 1749, 664, 1873, 788, 1583, 860, 982, 1495, 1745, 1613, 396, 1394, 1263, 175, 1183, 1913, 577, 274, 553, maxn, 581, 1442, 292, 1172,
maxn,1732, 507, 1779, 1527, 1300, 518, 1818, 1859, 1737, 929, 1219, 1353, 482, 210, 1647, 863, 1132, 209, 1024, 1427, 1220, 1018, 1352, 373, 582, 581, maxn, 836, 614, 850,
maxn,1371, 387, 173, 656, 891, 1050, 1234, 566, 664, 340, 492, 1819, 719, 268, 766, 1105, 631, 1242, 1172, 964, 437, 1142, 649, 1322, 1455, 1442, 836, maxn, 1337, 1310,
maxn,866, 409, 834, 1223, 274, 341, 1231, 1085, 653, 1007, 594, 1811, 504, 303, 1436, 735, 694, 1389, 518, 464, 1447, 1535, 1877, 611, 743, 292, 614, 1337, maxn, 963,
maxn,1868, 1673, 304, 936, 1516, 912, 1284, 1401, 398, 908, 1566, 438, 671, 1889, 1855, 403, 1746, 1203, 1568, 774, 468, 1452, 975, 1731, 1275, 1172, 850, 1310, 963, maxn
};
int timeCost[31][31]={
maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn, maxn,
maxn,maxn, 42, 68, 35, 1, 70, 25, 79, 59, 63, 65, 6, 46, 82, 28, 62, 92, 96, 43, 28, 37, 92, 5, 3, 54, 93, 83, 22, 17, 19,
maxn,42, maxn, 96, 48, 27, 72, 39, 70, 13, 68, 100, 36, 95, 4, 12, 23, 34, 74, 65, 42, 12, 54, 69, 48, 45, 63, 58, 38, 60, 24,
maxn,68, 96, maxn, 42, 30, 79, 17, 36, 91, 43, 89, 7, 41, 43, 65, 49, 47, 6, 91, 30, 71, 51, 7, 2, 94, 49, 30, 24, 85, 55,
maxn,35, 48, 42, maxn, 57, 41, 67, 77, 32, 9, 45, 40, 27, 24, 38, 39, 19, 83, 30, 42, 34, 16, 40, 59, 5, 31, 78, 7, 74, 87,
maxn,1, 27, 30, 57, maxn, 22, 46, 25, 73, 71, 30, 78, 74, 98, 13, 87, 91, 62, 37, 56, 68, 56, 75, 32, 53, 51, 51, 42, 25, 67,
maxn,70, 72, 79, 41, 22, maxn, 31, 8, 92, 8, 38, 58, 88, 54, 84, 46, 10, 10, 59, 22, 89, 23, 47, 7, 31, 14, 69, 1, 92, 63,
maxn,25, 39, 17, 67, 46, 31, maxn, 56, 11, 60, 25, 38, 49, 84, 96, 42, 3, 51, 92, 37, 75, 21, 97, 22, 49, 100, 69, 85, 82, 35,
maxn,79, 70, 36, 77, 25, 8, 56, maxn, 54, 100, 19, 39, 1, 89, 28, 68, 29, 94, 49, 84, 8, 22, 11, 18, 14, 15, 10, 17, 36, 52,
maxn,59, 13, 91, 32, 73, 92, 11, 54, maxn, 1, 50, 20, 57, 99, 4, 25, 9, 45, 10, 90, 3, 96, 86, 94, 44, 24, 88, 15, 4, 49,
maxn,63, 68, 43, 9, 71, 8, 60, 100, 1, maxn, 1, 59, 19, 81, 97, 99, 82, 90, 99, 10, 58, 73, 23, 39, 93, 39, 80, 91, 58, 59,
maxn,65, 100, 89, 45, 30, 38, 25, 19, 50, 1, maxn, 92, 16, 89, 57, 12, 3, 35, 73, 56, 29, 47, 63, 87, 76, 34, 70, 43, 45, 17,
maxn,6, 36, 7, 40, 78, 58, 38, 39, 20, 59, 92, maxn, 82, 99, 23, 52, 22, 100, 58, 77, 93, 90, 76, 13, 1, 11, 4, 70, 62, 89,
maxn,46, 95, 41, 27, 74, 88, 49, 1, 57, 19, 16, 82, maxn, 2, 90, 56, 24, 3, 86, 83, 86, 89, 27, 18, 58, 33, 33, 70, 55, 22,
maxn,82, 4, 43, 24, 98, 54, 84, 89, 99, 81, 89, 99, 2, maxn, 90, 77, 30, 69, 93, 26, 56, 35, 50, 42, 13, 46, 61, 19, 54, 40,
maxn,28, 12, 65, 38, 13, 84, 96, 28, 4, 97, 57, 23, 90, 90, maxn, 24, 80, 97, 88, 30, 50, 38, 67, 50, 94, 96, 98, 17, 87, 6,
maxn,62, 23, 49, 39, 87, 46, 42, 68, 25, 99, 12, 52, 56, 77, 24, maxn, 89, 83, 56, 35, 15, 2, 17, 72, 87, 64, 14, 56, 86, 54,
maxn,92, 34, 47, 19, 91, 10, 3, 29, 9, 82, 3, 22, 24, 30, 80, 89, maxn, 13, 9, 33, 46, 14, 57, 22, 59, 47, 83, 82, 45, 97,
maxn,96, 74, 6, 83, 62, 10, 51, 94, 45, 90, 35, 100, 3, 69, 97, 83, 13, maxn, 23, 30, 62, 36, 51, 74, 67, 45, 60, 93, 40, 54,
maxn,43, 65, 91, 30, 37, 59, 92, 49, 10, 99, 73, 58, 86, 93, 88, 56, 9, 23, maxn, 25, 55, 11, 46, 50, 87, 14, 75, 23, 69, 19,
maxn,28, 42, 30, 42, 56, 22, 37, 84, 90, 10, 56, 77, 83, 26, 30, 35, 33, 30, 25, maxn, 88, 6, 59, 92, 3, 26, 78, 15, 15, 25,
maxn,37, 12, 71, 34, 68, 89, 75, 8, 3, 58, 29, 93, 86, 56, 50, 15, 46, 62, 55, 88, maxn, 35, 75, 73, 60, 34, 71, 88, 98, 19,
maxn,92, 54, 51, 16, 56, 23, 21, 22, 96, 73, 47, 90, 89, 35, 38, 2, 14, 36, 11, 6, 35, maxn, 78, 74, 71, 64, 69, 93, 86, 3,
maxn,5, 69, 7, 40, 75, 47, 97, 11, 86, 23, 63, 76, 27, 50, 67, 17, 57, 51, 46, 59, 75, 78, maxn, 81, 14, 28, 3, 100, 28, 26,
maxn,3, 48, 2, 59, 32, 7, 22, 18, 94, 39, 87, 13, 18, 42, 50, 72, 22, 74, 50, 92, 73, 74, 81, maxn, 44, 25, 24, 73, 62, 82,
maxn,54, 45, 94, 5, 53, 31, 49, 14, 44, 93, 76, 1, 58, 13, 94, 87, 59, 67, 87, 3, 60, 71, 14, 44, maxn, 4, 33, 6, 94, 26,
maxn,93, 63, 49, 31, 51, 14, 100, 15, 24, 39, 34, 11, 33, 46, 96, 64, 47, 45, 14, 26, 34, 64, 28, 25, 4, maxn, 32, 93, 43, 23,
maxn,83, 58, 30, 78, 51, 69, 69, 10, 88, 80, 70, 4, 33, 61, 98, 14, 83, 60, 75, 78, 71, 69, 3, 24, 33, 32, maxn, 87, 65, 1,
maxn,22, 38, 24, 7, 42, 1, 85, 17, 15, 91, 43, 70, 70, 19, 17, 56, 82, 93, 23, 15, 88, 93, 100, 73, 6, 93, 87, maxn, 88, 61,
maxn,17, 60, 85, 74, 25, 92, 82, 36, 4, 58, 45, 62, 55, 54, 87, 86, 45, 40, 69, 15, 98, 86, 28, 62, 94, 43, 65, 88, maxn, 14,
maxn,19, 24, 55, 87, 67, 63, 35, 52, 49, 59, 17, 89, 22, 40, 6, 54, 97, 54, 19, 25, 19, 3, 26, 82, 26, 23, 1, 61, 14, maxn
};

void First();
void init();
void Endd();
void floydFirst();
void floydSecond();
void way();
void way1();
void shortestpath();
void shortesttime();

int main()
{
    init();
    First();
    system("pause");
    return 0;
}

void init()//初始化信息
{
	n[1].num=1;
	strcpy(n[1].name,"沈阳航空航天大学");
	n[2].num=2;
	strcpy(n[2].name,"太原街");
	n[3].num=3;
	strcpy(n[3].name,"辽宁大学北校区");
	n[4].num=4;
	strcpy(n[4].name,"沈阳师范大学");
	n[5].num=5;
	strcpy(n[5].name,"辽宁古生物博物馆");
	n[6].num=6;
	strcpy(n[6].name,"沈阳桃仙机场");
	n[7].num=7;
	strcpy(n[7].name,"青年大街");
	n[8].num=8;
	strcpy(n[8].name,"长白岛森林公园");
	n[9].num=9;
	strcpy(n[9].name,"教师公寓");
	n[10].num=10;
	strcpy(n[10].name,"沈东物流");
	n[11].num=11;
	strcpy(n[11].name,"沈阳故宫博物院");
	n[12].num=12;
	strcpy(n[12].name,"沈阳工学院");
	n[13].num=13;
	strcpy(n[13].name,"北塔公园");
	n[14].num=14;
	strcpy(n[14].name,"九・一八历史博物馆");
	n[15].num=15;
	strcpy(n[15].name,"辽宁市政府");
	n[16].num=16;
	strcpy(n[16].name,"新乐遗址");
	n[17].num=17;
	strcpy(n[17].name,"江山花园");
	n[18].num=18;
	strcpy(n[18].name,"中医药大学");
	n[19].num=19;
	strcpy(n[19].name,"抗美援朝烈士陵园");
	n[20].num=20;
	strcpy(n[20].name,"文官屯物流园");
	n[21].num=21;
	strcpy(n[21].name,"沈阳市公安局");
	n[22].num=22;
	strcpy(n[22].name,"明星村生态园");
	n[23].num=23;
	strcpy(n[23].name,"海韵广场");
	n[24].num=24;
	strcpy(n[24].name,"盛京碑林公园");
	n[25].num=25;
	strcpy(n[25].name,"蒲河湾小区");
	n[26].num=26;
	strcpy(n[26].name,"太湖国际花园");
	n[27].num=27;
	strcpy(n[27].name,"宇宙博览会");
	n[28].num=28;
	strcpy(n[28].name,"新北方高中");
	n[29].num=29;
	strcpy(n[29].name,"广业物流城");
	n[30].num=30;
	strcpy(n[30].name,"沈阳市第五十六中学");
}

void Endd(){
    cout<<"查询是否结束？Y/N"<<endl;
    char ch;
    cin>>ch;
    if(ch == 'Y'){
            cout<<endl;
            cout<<endl;
            cout<<"是否结束使用本程序？ Y/N"<<endl;
            cout<<"Y：退出程序    N: 返回主界面"<<endl;
            cout<<endl;
            cout<<endl;
            char ch1;
            cin>>ch1;
            if(ch1=='Y'){
                system("cls");
                printf("\n\n\n\t\t\t 谢谢使用！\n ");
                exit(0);
            }else {
                First();
            }

    }else{
        return;
    }


}
void floydFirst()
{
    int i,j,k;
    for(i=1;i<31;i++)
    {
        for(j=1;j<31;j++)
        {
            shortest[i][j]=dis[i][j];
            if(shortest[i][j]<maxn)
                path[i][j]=i;
            else
                path[i][j]=-1;
        }
    }
    for(k=1;k<31;k++)
    {
        for(i=1;i<31;i++)
        {
            for(j=1;j<31;j++)
            {
                if(shortest[i][j]>(shortest[i][k]+shortest[k][j]))
                {
                    shortest[i][j]=(shortest[i][k]+shortest[k][j]);
                    path[i][j]=path[k][j];
                }
            }
        }
    }
}

void way(int i,int j)//路线
{
    int k=0,a=i,b=j;
    if(shortest[i][j]!=maxn)
    {
        cout<<endl;
        cout<<"从"<<n[i].name<<"到"<<n[j].name<<"的最短路径为:"<<endl;
        cout<<endl;
        cout<<n[i].name;
        while(path[i][j]!=i)
        {
            k=path[i][j];
            while(path[i][k]!=i)
            {
                k=path[i][k];
            }
            cout<<"-到-"<<n[k].name;
            i=k;
        }
        cout<<"-到-"<<n[b].name<<endl;
        cout<<"这两点的最短距离为"<<shortest[a][b]<<"米"<<endl;
        cout<<endl;
    }
}
void shortestpath()//最短距离
{
    int i=0,j=0;
    while(true)
    {
        cout<<"请输入要查询的两点的编号："<<endl;
        cin>>i>>j;
        if(i<31&&i>0&&j<31&&j>0)
        {
            floydFirst();
            way(i,j);
            Endd();
        }else{
            cout<<"该点不存在"<<endl;
        }
    }
}

void floydSecond()
{
    int i,j,k;
    for(i=1;i<31;i++)
    {
        for(j=1;j<31;j++)
        {
            shorttime[i][j]=timeCost[i][j];
            if(shorttime[i][j]<maxn)
                path1[i][j]=i;
            else
                path1[i][j]=-1;
        }
    }
    for(k=1;k<31;k++)
    {
        for(i=1;i<31;i++)
        {
            for(j=1;j<31;j++)
            {
                if(shorttime[i][j]>(shorttime[i][k]+shorttime[k][j]))
                {
                    shorttime[i][j]=(shorttime[i][k]+shorttime[k][j]);
                    path1[i][j]=path1[k][j];
                }
            }
        }
    }
}

void way1(int i,int j)//路线
{
    int k=0,a=i,b=j;
    if(shorttime[i][j]!=maxn)
    {
        cout<<endl;
        cout<<"从"<<n[i].name<<"到"<<n[j].name<<"的用时最短的路径为:"<<endl;
        cout<<endl;
        cout<<n[i].name;
        while(path1[i][j]!=i)
        {
            k=path1[i][j];
            while(path1[i][k]!=i)
            {
                k=path1[i][k];
            }
            cout<<"-到-"<<n[k].name;
            i=k;
        }
        cout<<"-到-"<<n[b].name<<endl;
        cout<<"这两点的最短时间为"<<(double)shorttime[a][b]/60.0<<"小时"<<endl;
        cout<<endl;
    }
}
void shortesttime()//最短时间
{
    int i=0,j=0;
    while(true)
    {
        cout<<"请输入要查询的两点的编号："<<endl;
        cin>>i>>j;
        if(i<31&&i>0&&j<31&&j>0)
        {
            floydSecond();
            way1(i,j);
            Endd();
        }else{
        cout<<"该点不存在"<<endl;
        }
    }
}

void First(){
       while(true){
            system("cls");
            char ch;
            printf("******************************************************\n");
            printf("            欢迎使用公交出行查询程序\n");
            printf("-------------/**<  */-----------------------------------------\n\n\n\n");
            printf("                    >欢迎使用<\n\n\n\n\n");
            printf("******************************************************\n");
            system("pause");
            system("cls");
            printf("******************************************************\n");
            printf("******************************************************\n");
            for(int i = 1 ; i < 31 ; i++){
                cout<<"("<<i<<")"<<n[i].name<<"    \t";
                if(i%5==0){
                    cout<<endl;
                    cout<<endl;
                }
            }
            printf("\n");
            printf("******************************************************\n");
            printf("******************************************************\n");
            printf("输入“c”以查询最短路径\n");
            printf("输入“x”以查询最短时间\n");
            printf("输入“e”以退出程序\n");
            printf("请输入对应的英文小写字母，谢谢：\n\t");
            scanf("%s",&ch);
            switch(ch)
            {
                case'c':shortestpath();break;
                case'x':shortesttime();break;
                case'e':system("cls");printf("\n\n\n\t\t\t 谢谢使用！\n ");exit(0);break;
                default:printf("输入错误\n ");break;
            }
	}

}
